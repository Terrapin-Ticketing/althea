{"version":3,"sources":["webpack:///./src/routes/Login/modules/login.js","webpack:///./src/routes/Login/containers/LoginContainer.js","webpack:///./src/routes/Login/components/Login.js","webpack:///./src/routes/Login/components/Login.scss"],"names":["decryptPrivateKey","login","email","password","dispatch","getState","axios","url","method","data","withCredentials","then","res","token","setAuthorizationToken","type","payload","jwt","decode","catch","err","actions","ACTION_HANDLERS","initialState","loginReducer","state","action","handler","mapDispatchToProps","mapStateToProps","user","loginError","connect","Login","props","handleSubmit","bind","e","preventDefault","console","log","browserHistory","push","setState","target","value"],"mappings":"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","file":"4.756ca0ef0ac97771eca4.js","sourcesContent":["import axios from 'axios'\nimport jwt from 'jsonwebtoken';\nimport setAuthorizationToken from '../../../utils/setAuthorizationToken';\n\n// ------------------------------------\n// Constants\n// ------------------------------------\n\nfunction decryptPrivateKey() {\n  // * SYM DECRYPT *\n  //\n  // var decipher = crypto.createDecipher(algorithm, key);\n  // var deciphered = decipher.update(ciphered, outputEncoding, inputEncoding);\n  // deciphered += decipher.final(inputEncoding);\n  //\n  // console.log(deciphered);\n  // assert.equal(deciphered, text, 'Deciphered text does not match!');\n}\n\n/*  This is a thunk, meaning it is a function that immediately\n    returns a function for lazy evaluation. It is incredibly useful for\n    creating async actions, especially when combined with redux-thunk! */\n\nexport const login = (email, password) => {\n  return (dispatch, getState) => {\n    return axios({\n      url: `${SHAKEDOWN_URL}/login`,\n      method: 'post',\n      data: {email, password},\n      withCredentials: true\n    })\n      .then((res) => {\n        let { token } = res.data;\n        setAuthorizationToken(token);\n        dispatch({\n          type: 'LOGIN',\n          payload: jwt.decode(token)\n        });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  };\n};\n\nexport const actions = {\n  login\n};\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\nconst ACTION_HANDLERS = {\n};\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nconst initialState = { };\nexport default function loginReducer(state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type];\n\n  return handler ? handler(state, action) : state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Login/modules/login.js","import { connect } from 'react-redux'\nimport { login } from '../modules/login'\n\n/*  This is a container component. Notice it does not contain any JSX,\n    nor does it import React. This component is **only** responsible for\n    wiring in the actions and state necessary to render a presentational\n    component - in this case, the counter:   */\n\nimport Login from '../components/Login'\n\n/*  Object of action creators (can also be function that returns object).\n    Keys will be passed as props to presentational components. Here we are\n    implementing our wrapper around increment; the component doesn't care   */\n\nconst mapDispatchToProps = {\n  login\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user : state.user,\n    loginError: state.loginError\n  };\n}\n\n\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\n\n    import { createSelector } from 'reselect'\n    const counter = (state) => state.counter\n    const tripleCount = createSelector(counter, (count) => count * 3)\n    const mapStateToProps = (state) => ({\n      counter: tripleCount(state)\n    })\n\n    Selectors can compute derived data, allowing Redux to store the minimal possible state.\n    Selectors are efficient. A selector is not recomputed unless one of its arguments change.\n    Selectors are composable. They can be used as input to other selectors.\n    https://github.com/reactjs/reselect    */\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Login/containers/LoginContainer.js","import React, { Component } from 'react';\nimport './Login.scss';\nimport { browserHistory } from 'react-router';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      loginError: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    this.props.login(this.state.email, this.state.password)\n    .then(() => {\n      console.log('no err');\n      browserHistory.push('/events');\n    })\n    .catch((err) => { // email already taken\n      console.log(err);\n      this.setState({loginError: 'You entered the wrong login information. Please try again.'});\n      // this.setState({loginError: err.message});\n    });\n  }\n\n\n  render() {\n    return (\n      <form className='login-container' onSubmit={this.handleSubmit}>\n          <label className='label'>\n            <span>Email:</span>\n            <input type=\"text\" value={this.state.email} onChange={(e) => {\n              this.setState({email: e.target.value});\n            }} />\n          </label>\n          <label className='label'>\n            <span>Password:</span>\n            <input type=\"text\" value={this.state.password} onChange={(e) => {\n              this.setState({password: e.target.value})\n            }} />\n          </label>\n          <span className='error'>{(this.state.loginError) ? this.state.loginError : null}</span>\n          <span className='user'>{(this.props.user) ? this.props.user : null}</span>\n          <button type=\"submit\">Login</button>\n      </form>\n    )\n  }\n}\n\nexport default Login\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Login/components/Login.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/routes/Login/components/Login.scss\n// module id = 881\n// module chunks = 4"],"sourceRoot":""}